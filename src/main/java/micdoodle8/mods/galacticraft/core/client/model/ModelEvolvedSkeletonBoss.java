package micdoodle8.mods.galacticraft.core.client.model;

import net.minecraft.client.model.*;
import net.minecraft.entity.*;
import micdoodle8.mods.galacticraft.core.entities.*;
import net.minecraft.util.*;

public class ModelEvolvedSkeletonBoss extends ModelBase
{
    ModelRenderer upperHead;
    ModelRenderer pelvis;
    ModelRenderer sternum;
    ModelRenderer rightLeg;
    ModelRenderer rightArm;
    ModelRenderer spine;
    ModelRenderer leftArm;
    ModelRenderer leftLeg;
    ModelRenderer leftFrontBotRib;
    ModelRenderer leftFrontTopRib;
    ModelRenderer leftFront2ndRib;
    ModelRenderer leftFront3rdRib;
    ModelRenderer leftSideBotRib;
    ModelRenderer leftSide3rdRib;
    ModelRenderer leftSide2ndRib;
    ModelRenderer leftSideTopRib;
    ModelRenderer rightSideTopRib;
    ModelRenderer rightSide2ndRib;
    ModelRenderer rightSide3rdRib;
    ModelRenderer rightSideBotRib;
    ModelRenderer rightFrontBotRib;
    ModelRenderer rightFront3rdRib;
    ModelRenderer rightFront2ndRib;
    ModelRenderer rightFrontTopRib;
    ModelRenderer leftBackTopRib;
    ModelRenderer leftBack2ndRib;
    ModelRenderer leftBack3rdRib;
    ModelRenderer leftBackBotRib;
    ModelRenderer rightBackBotRib;
    ModelRenderer rightBack3rdRib;
    ModelRenderer rightBack2ndRib;
    ModelRenderer rightBackTopRib;
    
    public ModelEvolvedSkeletonBoss() {
        this.textureWidth = 128;
        this.textureHeight = 128;
        final float halfPI = 1.5707964f;
        (this.upperHead = new ModelRenderer((ModelBase)this, 0, 16)).addBox(-4.0f, -8.0f, -6.0f, 8, 8, 8);
        this.upperHead.setRotationPoint(0.0f, -24.0f, 6.0f);
        this.upperHead.setTextureSize(64, 32);
        this.upperHead.mirror = true;
        this.setRotation(this.upperHead, 0.122173f, 0.0f, 0.0f);
        (this.pelvis = new ModelRenderer((ModelBase)this, 32, 19)).addBox(-6.0f, 0.0f, -3.0f, 12, 5, 5);
        this.pelvis.setRotationPoint(0.0f, -2.0f, 5.0f);
        this.pelvis.setTextureSize(64, 32);
        this.pelvis.mirror = true;
        this.setRotation(this.pelvis, 0.0f, 0.0f, 0.0f);
        (this.sternum = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.5f, 0.0f, -1.0f, 3, 9, 1);
        this.sternum.setRotationPoint(0.0f, -21.0f, 2.0f);
        this.sternum.setTextureSize(64, 32);
        this.sternum.mirror = true;
        this.setRotation(this.sternum, 0.0f, 0.0f, 0.0f);
        this.rightLeg = new ModelRenderer((ModelBase)this, 56, 33);
        this.rightLeg.mirror = true;
        this.rightLeg.addBox(-2.0f, 0.0f, -2.0f, 3, 26, 3);
        this.rightLeg.setRotationPoint(-5.0f, 0.0f, 5.0f);
        this.rightLeg.setTextureSize(64, 32);
        this.rightLeg.mirror = true;
        this.setRotation(this.rightLeg, 0.0f, 0.0f, 0.0f);
        this.rightLeg.mirror = false;
        (this.rightArm = new ModelRenderer((ModelBase)this, 56, 33)).addBox(-2.0f, -2.0f, -1.5f, 3, 24, 3);
        this.rightArm.setRotationPoint(-8.0f, -20.0f, 5.0f);
        this.rightArm.setTextureSize(64, 32);
        this.rightArm.mirror = true;
        this.setRotation(this.rightArm, 0.0f, 0.0f, 0.0f);
        (this.spine = new ModelRenderer((ModelBase)this, 32, 33)).addBox(-1.5f, 0.0f, -1.0f, 3, 22, 2);
        this.spine.setRotationPoint(0.0f, -24.0f, 6.0f);
        this.spine.setTextureSize(64, 32);
        this.spine.mirror = true;
        this.setRotation(this.spine, 0.0f, 0.0f, 0.0f);
        (this.leftArm = new ModelRenderer((ModelBase)this, 56, 33)).addBox(-1.0f, -2.0f, -1.5f, 3, 24, 3);
        this.leftArm.setRotationPoint(8.0f, -20.0f, 5.0f);
        this.leftArm.setTextureSize(64, 32);
        this.leftArm.mirror = true;
        this.setRotation(this.leftArm, 0.0f, 0.0f, 0.0f);
        (this.leftLeg = new ModelRenderer((ModelBase)this, 56, 33)).addBox(-2.0f, 0.0f, -2.0f, 3, 26, 3);
        this.leftLeg.setRotationPoint(6.0f, 0.0f, 5.0f);
        this.leftLeg.setTextureSize(64, 32);
        this.leftLeg.mirror = true;
        this.setRotation(this.leftLeg, 0.0f, 0.0f, 0.0f);
        (this.leftFrontBotRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, 0.0f, 1, 2, 6);
        this.leftFrontBotRib.setRotationPoint(7.0f, -13.0f, 2.0f);
        this.leftFrontBotRib.setTextureSize(64, 32);
        this.leftFrontBotRib.mirror = true;
        this.setRotation(this.leftFrontBotRib, 0.0f, -halfPI, 0.0f);
        (this.leftFrontTopRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, 0.0f, 1, 2, 6);
        this.leftFrontTopRib.setRotationPoint(7.0f, -22.0f, 2.0f);
        this.leftFrontTopRib.setTextureSize(64, 32);
        this.leftFrontTopRib.mirror = true;
        this.setRotation(this.leftFrontTopRib, 0.0f, -halfPI, 0.0f);
        (this.leftFront2ndRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, 0.0f, 1, 2, 6);
        this.leftFront2ndRib.setRotationPoint(7.0f, -19.0f, 2.0f);
        this.leftFront2ndRib.setTextureSize(64, 32);
        this.leftFront2ndRib.mirror = true;
        this.setRotation(this.leftFront2ndRib, 0.0f, -halfPI, 0.0f);
        (this.leftFront3rdRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, 0.0f, 1, 2, 6);
        this.leftFront3rdRib.setRotationPoint(7.0f, -16.0f, 2.0f);
        this.leftFront3rdRib.setTextureSize(64, 32);
        this.leftFront3rdRib.mirror = true;
        this.setRotation(this.leftFront3rdRib, 0.0f, -halfPI, 0.0f);
        (this.leftSideBotRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, -6.0f, 1, 2, 6);
        this.leftSideBotRib.setRotationPoint(7.0f, -13.0f, 7.0f);
        this.leftSideBotRib.setTextureSize(64, 32);
        this.leftSideBotRib.mirror = true;
        this.setRotation(this.leftSideBotRib, 0.0f, 0.0f, 0.0f);
        (this.leftSide3rdRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, -6.0f, 1, 2, 6);
        this.leftSide3rdRib.setRotationPoint(7.0f, -16.0f, 7.0f);
        this.leftSide3rdRib.setTextureSize(64, 32);
        this.leftSide3rdRib.mirror = true;
        this.setRotation(this.leftSide3rdRib, 0.0f, 0.0f, 0.0f);
        (this.leftSide2ndRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, -6.0f, 1, 2, 6);
        this.leftSide2ndRib.setRotationPoint(7.0f, -19.0f, 7.0f);
        this.leftSide2ndRib.setTextureSize(64, 32);
        this.leftSide2ndRib.mirror = true;
        this.setRotation(this.leftSide2ndRib, 0.0f, 0.0f, 0.0f);
        (this.leftSideTopRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, -6.0f, 1, 2, 6);
        this.leftSideTopRib.setRotationPoint(7.0f, -22.0f, 7.0f);
        this.leftSideTopRib.setTextureSize(64, 32);
        this.leftSideTopRib.mirror = true;
        this.setRotation(this.leftSideTopRib, 0.0f, 0.0f, 0.0f);
        (this.rightSideTopRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, -6.0f, 1, 2, 6);
        this.rightSideTopRib.setRotationPoint(-7.0f, -22.0f, 7.0f);
        this.rightSideTopRib.setTextureSize(64, 32);
        this.rightSideTopRib.mirror = true;
        this.setRotation(this.rightSideTopRib, 0.0f, 0.0f, 0.0f);
        (this.rightSide2ndRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, -6.0f, 1, 2, 6);
        this.rightSide2ndRib.setRotationPoint(-7.0f, -19.0f, 7.0f);
        this.rightSide2ndRib.setTextureSize(64, 32);
        this.rightSide2ndRib.mirror = true;
        this.setRotation(this.rightSide2ndRib, 0.0f, 0.0f, 0.0f);
        (this.rightSide3rdRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, -6.0f, 1, 2, 6);
        this.rightSide3rdRib.setRotationPoint(-7.0f, -16.0f, 7.0f);
        this.rightSide3rdRib.setTextureSize(64, 32);
        this.rightSide3rdRib.mirror = true;
        this.setRotation(this.rightSide3rdRib, 0.0f, 0.0f, 0.0f);
        (this.rightSideBotRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, -6.0f, 1, 2, 6);
        this.rightSideBotRib.setRotationPoint(-7.0f, -13.0f, 7.0f);
        this.rightSideBotRib.setTextureSize(64, 32);
        this.rightSideBotRib.mirror = true;
        this.setRotation(this.rightSideBotRib, 0.0f, 0.0f, 0.0f);
        (this.rightFrontBotRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, 0.0f, 1, 2, 6);
        this.rightFrontBotRib.setRotationPoint(-7.0f, -13.0f, 2.0f);
        this.rightFrontBotRib.setTextureSize(64, 32);
        this.rightFrontBotRib.mirror = true;
        this.setRotation(this.rightFrontBotRib, 0.0f, halfPI, 0.0f);
        (this.rightFront3rdRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, 0.0f, 1, 2, 6);
        this.rightFront3rdRib.setRotationPoint(-7.0f, -16.0f, 2.0f);
        this.rightFront3rdRib.setTextureSize(64, 32);
        this.rightFront3rdRib.mirror = true;
        this.setRotation(this.rightFront3rdRib, 0.0f, halfPI, 0.0f);
        (this.rightFront2ndRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, 0.0f, 1, 2, 6);
        this.rightFront2ndRib.setRotationPoint(-7.0f, -19.0f, 2.0f);
        this.rightFront2ndRib.setTextureSize(64, 32);
        this.rightFront2ndRib.mirror = true;
        this.setRotation(this.rightFront2ndRib, 0.0f, halfPI, 0.0f);
        (this.rightFrontTopRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, 0.0f, 1, 2, 6);
        this.rightFrontTopRib.setRotationPoint(-7.0f, -22.0f, 2.0f);
        this.rightFrontTopRib.setTextureSize(64, 32);
        this.rightFrontTopRib.mirror = true;
        this.setRotation(this.rightFrontTopRib, 0.0f, halfPI, 0.0f);
        (this.leftBackTopRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, 0.0f, 1, 2, 6);
        this.leftBackTopRib.setRotationPoint(7.0f, -22.0f, 7.0f);
        this.leftBackTopRib.setTextureSize(64, 32);
        this.leftBackTopRib.mirror = true;
        this.setRotation(this.leftBackTopRib, 0.0f, -halfPI, 0.0f);
        (this.leftBack2ndRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, 0.0f, 1, 2, 6);
        this.leftBack2ndRib.setRotationPoint(7.0f, -19.0f, 7.0f);
        this.leftBack2ndRib.setTextureSize(64, 32);
        this.leftBack2ndRib.mirror = true;
        this.setRotation(this.leftBack2ndRib, 0.0f, -halfPI, 0.0f);
        (this.leftBack3rdRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, 0.0f, 1, 2, 6);
        this.leftBack3rdRib.setRotationPoint(7.0f, -16.0f, 7.0f);
        this.leftBack3rdRib.setTextureSize(64, 32);
        this.leftBack3rdRib.mirror = true;
        this.setRotation(this.leftBack3rdRib, 0.0f, -halfPI, 0.0f);
        (this.leftBackBotRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(-1.0f, 0.0f, 0.0f, 1, 2, 6);
        this.leftBackBotRib.setRotationPoint(7.0f, -13.0f, 7.0f);
        this.leftBackBotRib.setTextureSize(64, 32);
        this.leftBackBotRib.mirror = true;
        this.setRotation(this.leftBackBotRib, 0.0f, -halfPI, 0.0f);
        (this.rightBackBotRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, 0.0f, 1, 2, 6);
        this.rightBackBotRib.setRotationPoint(-7.0f, -13.0f, 7.0f);
        this.rightBackBotRib.setTextureSize(64, 32);
        this.rightBackBotRib.mirror = true;
        this.setRotation(this.rightBackBotRib, 0.0f, halfPI, 0.0f);
        (this.rightBack3rdRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, 0.0f, 1, 2, 6);
        this.rightBack3rdRib.setRotationPoint(-7.0f, -16.0f, 7.0f);
        this.rightBack3rdRib.setTextureSize(64, 32);
        this.rightBack3rdRib.mirror = true;
        this.setRotation(this.rightBack3rdRib, 0.0f, halfPI, 0.0f);
        (this.rightBack2ndRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, 0.0f, 1, 2, 6);
        this.rightBack2ndRib.setRotationPoint(-7.0f, -19.0f, 7.0f);
        this.rightBack2ndRib.setTextureSize(64, 32);
        this.rightBack2ndRib.mirror = true;
        this.setRotation(this.rightBack2ndRib, 0.0f, halfPI, 0.0f);
        (this.rightBackTopRib = new ModelRenderer((ModelBase)this, 0, 0)).addBox(0.0f, 0.0f, 0.0f, 1, 2, 6);
        this.rightBackTopRib.setRotationPoint(-7.0f, -22.0f, 7.0f);
        this.rightBackTopRib.setTextureSize(64, 32);
        this.rightBackTopRib.mirror = true;
        this.setRotation(this.rightBackTopRib, 0.0f, halfPI, 0.0f);
    }
    
    public void render(final Entity entity, final float f, final float f1, final float f2, final float f3, final float f4, final float f5) {
        super.render(entity, f, f1, f2, f3, f4, f5);
        this.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
        this.upperHead.render(f5);
        this.pelvis.render(f5);
        this.sternum.render(f5);
        this.rightLeg.render(f5);
        this.rightArm.render(f5);
        this.spine.render(f5);
        this.leftArm.render(f5);
        this.leftLeg.render(f5);
        this.leftFrontBotRib.render(f5);
        this.leftFrontTopRib.render(f5);
        this.leftFront2ndRib.render(f5);
        this.leftFront3rdRib.render(f5);
        this.leftSideBotRib.render(f5);
        this.leftSide3rdRib.render(f5);
        this.leftSide2ndRib.render(f5);
        this.leftSideTopRib.render(f5);
        this.rightSideTopRib.render(f5);
        this.rightSide2ndRib.render(f5);
        this.rightSide3rdRib.render(f5);
        this.rightSideBotRib.render(f5);
        this.rightFrontBotRib.render(f5);
        this.rightFront3rdRib.render(f5);
        this.rightFront2ndRib.render(f5);
        this.rightFrontTopRib.render(f5);
        this.leftBackTopRib.render(f5);
        this.leftBack2ndRib.render(f5);
        this.leftBack3rdRib.render(f5);
        this.leftBackBotRib.render(f5);
        this.rightBackBotRib.render(f5);
        this.rightBack3rdRib.render(f5);
        this.rightBack2ndRib.render(f5);
        this.rightBackTopRib.render(f5);
    }
    
    private void setRotation(final ModelRenderer model, final float x, final float y, final float z) {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }
    
    public void setRotationAngles(final float par1, final float par2, final float par3, final float par4, final float par5, final float par6, final Entity e) {
        final EntitySkeletonBoss boss = (EntitySkeletonBoss)e;
        super.setRotationAngles(par1, par2, par3, par4, par5, par6, e);
        this.upperHead.rotateAngleY = 0.0f;
        this.upperHead.rotateAngleX = 0.0f;
        this.rightArm.rotateAngleX = MathHelper.cos(par1 * 0.6662f + 3.1415927f) * 2.0f * par2 * 0.5f;
        this.leftArm.rotateAngleX = MathHelper.cos(par1 * 0.6662f) * 2.0f * par2 * 0.5f;
        this.rightArm.rotateAngleZ = 0.0f;
        this.leftArm.rotateAngleZ = 0.0f;
        this.rightLeg.rotateAngleX = MathHelper.cos(par1 * 0.6662f) * 1.4f * par2;
        this.leftLeg.rotateAngleX = MathHelper.cos(par1 * 0.6662f + 3.1415927f) * 1.4f * par2;
        this.rightLeg.rotateAngleY = 0.0f;
        this.leftLeg.rotateAngleY = 0.0f;
        if (this.isRiding) {
            final ModelRenderer rightArm = this.rightArm;
            rightArm.rotateAngleX -= 0.62831855f;
            final ModelRenderer leftArm = this.leftArm;
            leftArm.rotateAngleX -= 0.62831855f;
            this.rightLeg.rotateAngleX = -1.2566371f;
            this.leftLeg.rotateAngleX = -1.2566371f;
            this.rightLeg.rotateAngleY = 0.31415927f;
            this.leftLeg.rotateAngleY = -0.31415927f;
        }
        this.rightArm.rotateAngleY = 0.0f;
        this.leftArm.rotateAngleY = 0.0f;
        if (this.onGround > -9990.0f) {
            float var7 = this.onGround;
            this.spine.rotateAngleY = MathHelper.sin(MathHelper.sqrt_float(var7) * 3.1415927f * 2.0f) * 0.2f;
            this.rightArm.rotationPointZ = MathHelper.sin(this.spine.rotateAngleY) * 5.0f;
            this.rightArm.rotationPointX = -MathHelper.cos(this.spine.rotateAngleY) * 5.0f;
            this.leftArm.rotationPointZ = -MathHelper.sin(this.spine.rotateAngleY) * 5.0f;
            this.leftArm.rotationPointX = MathHelper.cos(this.spine.rotateAngleY) * 5.0f;
            final ModelRenderer rightArm2 = this.rightArm;
            rightArm2.rotateAngleY += this.spine.rotateAngleY;
            final ModelRenderer leftArm2 = this.leftArm;
            leftArm2.rotateAngleY += this.spine.rotateAngleY;
            final ModelRenderer leftArm3 = this.leftArm;
            leftArm3.rotateAngleX += this.spine.rotateAngleY;
            var7 = 1.0f - this.onGround;
            var7 *= var7;
            var7 *= var7;
            var7 = 1.0f - var7;
            final float var8 = MathHelper.sin(var7 * 3.1415927f);
            final float var9 = MathHelper.sin(this.onGround * 3.1415927f) * -(this.upperHead.rotateAngleX - 0.7f) * 0.75f;
            this.rightArm.rotateAngleX -= (float)(var8 * 1.2 + var9);
            final ModelRenderer rightArm3 = this.rightArm;
            rightArm3.rotateAngleY += this.spine.rotateAngleY * 2.0f;
            this.rightArm.rotateAngleZ = MathHelper.sin(this.onGround * 3.1415927f) * -0.4f;
        }
        final ModelRenderer rightArm4 = this.rightArm;
        rightArm4.rotateAngleZ += MathHelper.cos(par3 * 0.09f) * 0.05f + 0.05f;
        final ModelRenderer leftArm4 = this.leftArm;
        leftArm4.rotateAngleZ -= MathHelper.cos(par3 * 0.09f) * 0.05f + 0.05f;
        final ModelRenderer rightArm5 = this.rightArm;
        rightArm5.rotateAngleX += MathHelper.sin(par3 * 0.067f) * 0.05f;
        final ModelRenderer leftArm5 = this.leftArm;
        leftArm5.rotateAngleX -= MathHelper.sin(par3 * 0.067f) * 0.05f;
        MathHelper.sin(this.onGround * 3.1415927f);
        MathHelper.sin((1.0f - (1.0f - this.onGround) * (1.0f - this.onGround)) * 3.1415927f);
        float var7 = 0.0f;
        final float var8 = 0.0f;
        this.rightArm.rotateAngleZ = 0.0f;
        this.leftArm.rotateAngleZ = 0.0f;
        this.rightArm.rotateAngleY = -(0.1f - var7 * 0.6f) + this.upperHead.rotateAngleY;
        this.leftArm.rotateAngleY = 0.1f - var7 * 0.6f + this.upperHead.rotateAngleY + 0.4f;
        this.rightArm.rotateAngleX = -1.5707964f + this.upperHead.rotateAngleX;
        this.leftArm.rotateAngleX = -1.5707964f + this.upperHead.rotateAngleX;
        final ModelRenderer rightArm6 = this.rightArm;
        rightArm6.rotateAngleX -= var7 * 1.2f - var8 * 0.4f;
        final ModelRenderer leftArm6 = this.leftArm;
        leftArm6.rotateAngleX -= var7 * 1.2f - var8 * 0.4f;
        final ModelRenderer rightArm7 = this.rightArm;
        rightArm7.rotateAngleZ += MathHelper.cos(par3 * 0.09f) * 0.05f + 0.05f;
        final ModelRenderer leftArm7 = this.leftArm;
        leftArm7.rotateAngleZ -= MathHelper.cos(par3 * 0.09f) * 0.05f + 0.05f;
        final ModelRenderer rightArm8 = this.rightArm;
        rightArm8.rotateAngleX += MathHelper.sin(par3 * 0.067f) * 0.05f;
        final ModelRenderer leftArm8 = this.leftArm;
        leftArm8.rotateAngleX -= MathHelper.sin(par3 * 0.067f) * 0.05f;
        final float f6 = MathHelper.sin(this.onGround * 3.1415927f);
        final float f7 = MathHelper.sin((1.0f - (1.0f - this.onGround) * (1.0f - this.onGround)) * 3.1415927f);
        this.rightArm.rotateAngleZ = 0.0f;
        this.leftArm.rotateAngleZ = 0.0f;
        this.rightArm.rotateAngleY = -(0.1f - f6 * 0.6f);
        this.leftArm.rotateAngleY = 0.1f - f6 * 0.6f;
        this.rightArm.rotateAngleX = -1.5707964f;
        this.leftArm.rotateAngleX = -1.5707964f;
        final ModelRenderer rightArm9 = this.rightArm;
        rightArm9.rotateAngleX -= f6 * 1.2f - f7 * 0.4f;
        final ModelRenderer leftArm9 = this.leftArm;
        leftArm9.rotateAngleX -= f6 * 1.2f - f7 * 0.4f;
        final ModelRenderer rightArm10 = this.rightArm;
        rightArm10.rotateAngleZ += MathHelper.cos(par3 * 0.09f) * 0.05f + 0.05f;
        final ModelRenderer leftArm10 = this.leftArm;
        leftArm10.rotateAngleZ -= MathHelper.cos(par3 * 0.09f) * 0.05f + 0.05f;
        final ModelRenderer rightArm11 = this.rightArm;
        rightArm11.rotateAngleX += MathHelper.sin(par3 * 0.067f) * 0.05f;
        final ModelRenderer leftArm11 = this.leftArm;
        leftArm11.rotateAngleX -= MathHelper.sin(par3 * 0.067f) * 0.05f;
        if (boss.throwTimer + boss.postThrowDelay > 0) {
            final ModelRenderer rightArm12 = this.rightArm;
            rightArm12.rotateAngleX -= MathHelper.cos((boss.throwTimer + boss.postThrowDelay) * 0.05f) * 1.2f + 0.05f;
            final ModelRenderer leftArm12 = this.leftArm;
            leftArm12.rotateAngleX -= MathHelper.cos((boss.throwTimer + boss.postThrowDelay) * 0.05f) * 1.2f + 0.05f;
        }
    }
}
